---
version: 2.1

debian-steps: &debian-steps
  steps:
    - checkout
    - run: ci/circleci-build-debian.sh
    - run: sh -c "cd /build-$OCPN_TARGET; /bin/bash < upload.sh"
    - run: sh -c "ci/git-push.sh /build-$OCPN_TARGET"

flatpak-steps: &flatpak-steps
  steps:
    - checkout
    - restore_cache:
        key: "<<parameters.cache-key>>
          -{{ checksum \"ci/circleci-build-flatpak.sh\" }}"
    - run: ci/circleci-build-flatpak.sh
    - save_cache:
        key: "<<parameters.cache-key>>
          -{{ checksum \"ci/circleci-build-flatpak.sh\" }}"
        paths:
          - /home/circleci/.local/share/flatpak/repo
    - run: cd /build-flatpak; /bin/bash < upload.sh
    - run: ci/git-push.sh /build-flatpak

jobs:
  build-bullseye:
    docker:
      - image: circleci/buildpack-deps:bullseye-scm
    environment:
      - OCPN_TARGET: bullseye
      - TARGET_TUPLE: debian-x86_64;11;x86_64
      - CMAKE_BUILD_PARALLEL_LEVEL: 2
    <<: *debian-steps

  build-bullseye-wx32:
    docker:
      - image: circleci/buildpack-deps:bullseye-scm
    environment:
      - OCPN_TARGET: bullseye
      - BUILD_WX32: true
      - TARGET_TUPLE: debian-wx32-x86_64;11;x86_64
      - CMAKE_BUILD_PARALLEL_LEVEL: 2
    <<: *debian-steps

  build-bullseye-armhf:
    machine:
      image: ubuntu-2204:current
    resource_class: arm.medium
    environment:
      - TARGET_TUPLE: debian-armhf;11;armhf
      - OCPN_TARGET: bullseye
      - CMAKE_BUILD_PARALLEL_LEVEL: 2
    steps:
      - checkout
      - run: ci/circleci-build-debian-armhf.sh
      - run: cd build-debian; /bin/bash < upload.sh
      - run: ci/git-push.sh build-debian

  build-bullseye-wx32-armhf:
    machine:
      image: ubuntu-2204:current
    resource_class: arm.medium
    environment:
      - TARGET_TUPLE: debian-wx32-armhf;11;armhf
      - OCPN_TARGET: bullseye
      - BUILD_WX32: true
      - CMAKE_BUILD_PARALLEL_LEVEL: 2
    steps:
      - checkout
      - run: ci/circleci-build-debian-armhf.sh
      - run: cd build-debian; /bin/bash < upload.sh
      - run: ci/git-push.sh build-debian


  build-bullseye-arm64:
    machine:
      image: ubuntu-2204:current
    resource_class: arm.medium
    environment:
      - OCPN_TARGET: bullseye
      - TARGET_TUPLE: debian-arm64;11;arm64
      - CMAKE_BUILD_PARALLEL_LEVEL: 2
    steps:
      - checkout
      - run: ci/circleci-build-debian-docker.sh
      - run: cd build-debian; /bin/bash < upload.sh
      - run: ci/git-push.sh build-debian

  build-bullseye-wx32-arm64:
    machine:
      image: ubuntu-2204:current
    resource_class: arm.medium
    environment:
      - OCPN_TARGET: bullseye
      - BUILD_WX32: true
      - TARGET_TUPLE: debian-wx32-arm64;11;arm64
      - CMAKE_BUILD_PARALLEL_LEVEL: 2
    steps:
      - checkout
      - run: ci/circleci-build-debian-docker.sh
      - run: cd build-debian; /bin/bash < upload.sh
      - run: ci/git-push.sh build-debian


  build-bookworm:
    machine:
      image: ubuntu-2204:current
    resource_class: medium
    environment:
      - OCPN_TARGET: bookworm
      - TARGET_TUPLE: debian-x86_64;12;x86_64
      - CMAKE_BUILD_PARALLEL_LEVEL: 2
    steps:
      - checkout
      - run: ci/circleci-build-debian-docker.sh
      - run: cd build-debian; /bin/bash < upload.sh
      - run: ci/git-push.sh build-debian

  build-bookworm-arm64:
    machine:
      image: ubuntu-2204:current
    resource_class: arm.medium
    environment:
      - OCPN_TARGET: bookworm
      - TARGET_TUPLE: debian-arm64;12;arm64
      - CMAKE_BUILD_PARALLEL_LEVEL: 2
    steps:
      - checkout
      - run: ci/circleci-build-debian-docker.sh
      - run: cd build-debian; /bin/bash < upload.sh
      - run: ci/git-push.sh build-debian

  build-bookworm-armhf:
    machine:
      image: ubuntu-2204:current
    resource_class: arm.medium
    environment:
      - TARGET_TUPLE: debian-armhf;12;armhf
      - OCPN_TARGET: bookworm
      - CMAKE_BUILD_PARALLEL_LEVEL: 2
    steps:
      - checkout
      - run: ci/circleci-build-debian-armhf.sh
      - run: cd build-debian; /bin/bash < upload.sh
      - run: ci/git-push.sh build-debian

  build-flatpak-arm64:
    machine:
      image: ubuntu-2204:current
    resource_class: arm.medium
    environment:
      - OCPN_TARGET: flatpak-arm64
      - CMAKE_BUILD_PARALLEL_LEVEL: 2
      - BRANCH: stable
    parameters:
      cache-key:
        type: string
        # Update the last part, here v2, to invalidate cache
        default: "fp-arm20-v2"
    <<: *flatpak-steps

  build-flatpak-arm64-2408:
    machine:
      image: ubuntu-2204:current
    resource_class: arm.medium
    environment:
      - OCPN_TARGET: flatpak-arm64
      - CMAKE_BUILD_PARALLEL_LEVEL: 2
      - BRANCH: beta
    parameters:
      cache-key:
        type: string
        # Update the last part, here v2, to invalidate cache
        default: "fp-arm20-v2"
    <<: *flatpak-steps


  build-flatpak-x86:
    machine:
      image: ubuntu-2204:current
    environment:
      - OCPN_TARGET: flatpak
      - CMAKE_BUILD_PARALLEL_LEVEL: 2
      - BRANCH: stable
    parameters:
      cache-key:
        type: string
        # Update the last part, here v2, to invalidate cache
        default: "fp-x86-20-v2"
    <<: *flatpak-steps

  build-flatpak-x86-2408:
    machine:
      image: ubuntu-2204:current
    environment:
      - OCPN_TARGET: flatpak
      - CMAKE_BUILD_PARALLEL_LEVEL: 2
      - BRANCH: beta
    parameters:
      cache-key:
        type: string
        # Update the last part, here v2, to invalidate cache
        default: "fp-x86-20-v2"
    <<: *flatpak-steps


  build-macos:
    macos:
      xcode: "15.2.0"
    environment:
      - OCPN_TARGET: macos
      - CMAKE_BUILD_PARALLEL_LEVEL: 2
    steps:
      - checkout
      - run: sudo chmod go+w /usr/local
      - restore_cache:
          key: "{{checksum \"build-deps/macos-cache-stamp\"}}\
            -{{checksum \"cmake/MacosWxwidgets.cmake\"}}\
            -{{checksum \"ci/circleci-build-macos.sh\"}}"
      - run: ci/circleci-build-macos.sh
      - save_cache:
          key: "{{checksum \"build-deps/macos-cache-stamp\"}}\
            -{{checksum \"cmake/MacosWxwidgets.cmake\"}}\
            -{{checksum \"ci/circleci-build-macos.sh\"}}"
          paths:
            - /tmp/local.cache.tar
            - /Users/distiller/project/cache
      - run: >
          sh -c "otool -L build-osx/app/*/OpenCPN.app/Contents/PlugIns/*.dylib"
      - run: cd build-osx; /bin/bash < upload.sh
      - run: ci/git-push.sh  build-osx


  build-android-arm64:
    docker:
      - image: cimg/android:2023.08-ndk
    environment:
      - OCPN_TARGET: android-aarch64
      - CMAKE_BUILD_PARALLEL_LEVEL: 2
    steps:
      - checkout
      - run: ci/circleci-build-android.sh
      - run: ci/maybe-push-upload.sh

  build-android-armhf:
    docker:
      - image: cimg/android:2023.08-ndk
    environment:
      - OCPN_TARGET: android-armhf
      - CMAKE_BUILD_PARALLEL_LEVEL: 2
    steps:
      - checkout
      - run: ci/circleci-build-android.sh
      - run: ci/maybe-push-upload.sh

std-filters: &std-filters
  filters:
    branches:
      ignore:
        - tmp
        - /tmp-.*/

workflows:
  version: 2
  build_all:
    jobs:

      - build-flatpak-arm64:
          <<: *std-filters

      - build-flatpak-x86:
          <<: *std-filters

      - build-flatpak-arm64-2408:
          <<: *std-filters

      - build-flatpak-x86-2408:
          <<: *std-filters

      - build-macos:
          <<: *std-filters

      - build-android-arm64:
          <<: *std-filters

      - build-android-armhf:
          <<: *std-filters

      - build-bullseye-wx32:
          <<: *std-filters

      - build-bullseye-wx32-arm64:
          <<: *std-filters

      - build-bullseye-wx32-armhf:
          <<: *std-filters

      - build-bullseye:
          <<: *std-filters

      - build-bullseye-armhf:
          <<: *std-filters

      - build-bullseye-arm64:
          <<: *std-filters

      - build-bookworm-arm64:
          <<: *std-filters

      - build-bookworm-armhf:
          <<: *std-filters

      - build-bookworm:
          <<: *std-filters
